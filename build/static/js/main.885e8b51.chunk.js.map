{"version":3,"sources":["components/Filter.js","components/Form.js","components/Numbers.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["Filter","props","value","filter","onChange","Form","onSubmit","newName","handleNameInput","newNumber","handleNumberInput","type","Numbers","peopleToShow","deletePerson","map","person","key","name","number","onClick","Notification","message","style","color","borderStyle","borderRadius","padding","backgroundColor","text","baseUrl","axios","get","object","post","put","id","delete","App","useState","persons","setPersons","setNewName","setNewNumber","setFilter","setMessage","useEffect","personService","then","response","data","toLowerCase","includes","event","target","preventDefault","length","window","confirm","personToUpdate","find","p","setTimeout","catch","concat","error","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.885e8b51.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Filter = props => (\n    <p>\n        Filter shown <input value={props.filter} onChange={props.onChange} />\n    </p>\n);\n\nexport default Filter;\n","import React from \"react\";\n\nconst Form = props => (\n    <form onSubmit={props.onSubmit}>\n        <div>\n            name:\n            <input value={props.newName} onChange={props.handleNameInput} />\n        </div>\n        <div>\n            number:\n            <input value={props.newNumber} onChange={props.handleNumberInput} />\n        </div>\n        <div>\n            <button type=\"submit\">add</button>\n        </div>\n    </form>\n);\n\nexport default Form;\n","import React from \"react\";\n\nconst Numbers = ({ peopleToShow, deletePerson }) =>\n    peopleToShow.map(person => (\n        <p key={person.name}>\n            {person.name} {person.number}\n            <button onClick={() => deletePerson(person)}>Delete</button>\n        </p>\n    ));\n\nexport default Numbers;\n","import React from \"react\";\n\nconst Notification = ({ message }) => {\n    if (message) {\n        \n        const style = {\n            color: message.type === \"error\" ? \"red\" : \"green\",\n            borderStyle: \"solid\",\n            borderRadius: 5,\n            padding: 5,\n            backgroundColor: \"lightgray\"\n        };\n\n        return (\n            <div style={style}>\n                <p>{message.text}</p>\n            </div>\n        );\n    }\n\n    return null;\n};\n\nexport default Notification;\n","import axios from \"axios\";\nconst baseUrl = \"/api/persons\";\n\nconst getAll = () => axios.get(baseUrl);\n\nconst show = id => axios.get(`${baseUrl}/${id}`);\n\nconst create = object => axios.post(baseUrl, object);\n\nconst update = object => axios.put(`${baseUrl}/${object.id}`, object);\n\nconst deleteObject = id => axios.delete(`${baseUrl}/${id}`);\n\nexport default { getAll, show, create, update, deleteObject };\n","import React, { useState, useEffect } from \"react\";\n\nimport Filter from \"./components/Filter\";\nimport Form from \"./components/Form\";\nimport Numbers from \"./components/Numbers\";\nimport Notification from \"./components/Notification\";\n\nimport personService from \"./services/persons\";\n\nconst App = () => {\n    const [persons, setPersons] = useState([]);\n\n    const [newName, setNewName] = useState(\"\");\n    const [newNumber, setNewNumber] = useState(\"\");\n    const [filter, setFilter] = useState(\"\");\n    const [message, setMessage] = useState(\"\");\n\n    useEffect(() => {\n        personService.getAll().then(response => setPersons(response.data));\n    }, []);\n\n    const handleNameInput = event => setNewName(event.target.value);\n    const handleNumberInput = event => setNewNumber(event.target.value);\n\n    const handleFilter = event => setFilter(event.target.value);\n\n    const peopleToShow = filter\n        ? persons.filter(person => person.name.toLowerCase().includes(filter))\n        : persons;\n\n    const handleSubmit = event => {\n        event.preventDefault();\n\n        const hasNameAlready = persons.filter(\n            person => person.name === newName\n        );\n\n        if (hasNameAlready.length) {\n            const confirmReplace = window.confirm(\n                `${newName} is already in the phonebook, replace the old number with a new one?`\n            );\n\n            if (confirmReplace) {\n                const personToUpdate = persons.find(p => p.name === newName);\n\n                personService\n                    .update({ ...personToUpdate, number: newNumber })\n                    .then(response => {\n                        setPersons(\n                            persons.map(person =>\n                                person.id === personToUpdate.id\n                                    ? response.data\n                                    : person\n                            )\n                        );\n                        setMessage({\n                            text: `Changed number for ${newName}`,\n                            type: \"success\"\n                        });\n                        setTimeout(() => setMessage(null), 5000);\n                    })\n                    .catch(() => {\n                        setMessage({\n                            text: `Information on ${newName} is already deleted`,\n                            type: \"error\"\n                        });\n                        setTimeout(() => setMessage(null), 5000);\n\n                        setPersons(\n                            persons.filter(\n                                person => person.id !== personToUpdate.id\n                            )\n                        );\n                    });\n            }\n        } else {\n            personService\n                .create({\n                    name: newName,\n                    number: newNumber\n                })\n                .then(response => {\n                    setPersons(persons.concat(response.data));\n                    setMessage({\n                        text: `Added ${newName}`,\n                        type: \"success\"\n                    });\n                    setTimeout(() => setMessage(null), 5000);\n                })\n                .catch(error => {\n                    setMessage({\n                        text: error.response.data.error,\n                        type: \"error\"\n                    });\n                    setTimeout(() => setMessage(null), 5000);\n                });\n        }\n\n        setNewName(\"\");\n        setNewNumber(\"\");\n    };\n\n    const deletePerson = person => {\n        const confirmDelete = window.confirm(`Delete person ${person.name}?`);\n\n        if (confirmDelete) {\n            personService.deleteObject(person.id).then(() => {\n                setPersons(persons.filter(p => p.id !== person.id));\n                setMessage({\n                    text: `Deleted ${person.name}`,\n                    type: \"success\"\n                });\n                setTimeout(() => setMessage(null), 5000);\n            });\n        }\n    };\n\n    return (\n        <div>\n            <Notification message={message} />\n            <h2>Phonebook</h2>\n            <Filter value={filter} onChange={handleFilter} />\n            <h2>Add a new number</h2>\n\n            <Form\n                onSubmit={handleSubmit}\n                newName={newName}\n                newNumber={newNumber}\n                handleNameInput={handleNameInput}\n                handleNumberInput={handleNumberInput}\n            />\n            <h2>Numbers</h2>\n            <Numbers peopleToShow={peopleToShow} deletePerson={deletePerson} />\n        </div>\n    );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}